on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    name: Build & Deploy to AWS
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: medusa
      ECS_CLUSTER: medusa-cluster
      ECS_SERVICE: medusa-service
      ECS_TASK_DEFINITION: medusa-task
      CONTAINER_NAME: medusa

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: ./DEMO/medusa-aws-deployment/terraform
      run: terraform init

    - name: Terraform Destroy
      run: terraform destroy -auto-approve

    - name: Terraform Plan
      working-directory: ./DEMO/medusa-aws-deployment/terraform
      run: terraform plan -out=tfplan -var="db_password=${{ secrets.DB_PASSWORD }}"

      
    - name: Terraform Apply
      working-directory: ./DEMO/medusa-aws-deployment/terraform
      run: terraform apply -auto-approve -var="db_password=${{ secrets.DB_PASSWORD }}"



    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image
      working-directory: ./DEMO/medusa-aws-deployment/backend
      run: |
        IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI

