name: ‚ò†Ô∏è AWS Ultimate Cleanup

on:
  workflow_dispatch:  # Allows you to trigger manually from GitHub UI

jobs:
  nuke-resources:
    name: üî• Nuke AWS Resources
    runs-on: ubuntu-latest

    steps:
      - name: üîê Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your region if needed

      - name: üß® Delete AWS Resources
        run: |
          echo "üöÄ Starting cleanup of Medusa AWS resources..."

          # Delete ECR Repository
          echo "üßº Deleting ECR Repository..."
          aws ecr delete-repository --repository-name medusa-ecr-repo --force || echo "‚ùå ECR repository not found"

          # Delete ELB Target Group
          echo "üßº Deleting ELBv2 Target Group..."
          TG_ARN=$(aws elbv2 describe-target-groups --names medusa-tg --query "TargetGroups[0].TargetGroupArn" --output text 2>/dev/null)
          if [[ "$TG_ARN" != "None" && "$TG_ARN" != "" ]]; then
            aws elbv2 delete-target-group --target-group-arn "$TG_ARN" || echo "‚ùå Failed to delete target group"
          else
            echo "‚ùå Target group not found"
          fi

          # Delete CloudWatch Log Group
          echo "üßº Deleting CloudWatch Log Group..."
          aws logs delete-log-group --log-group-name /ecs/medusa || echo "‚ùå Log group not found"

          # Delete IAM Role
          echo "üßº Deleting IAM Role..."
          POLICIES=$(aws iam list-attached-role-policies --role-name ecsTaskExecutionRole --query "AttachedPolicies[*].PolicyArn" --output text 2>/dev/null)
          for POLICY in $POLICIES; do
            aws iam detach-role-policy --role-name ecsTaskExecutionRole --policy-arn $POLICY || true
          done
          aws iam delete-role --role-name ecsTaskExecutionRole || echo "‚ùå IAM role not found"

          # Delete RDS Subnet Group
          echo "üßº Deleting RDS DB Subnet Group..."
          aws rds delete-db-subnet-group --db-subnet-group-name medusa-db-subnet-group || echo "‚ùå DB subnet group not found"

          echo "‚úÖ Cleanup completed successfully."
